[tool.poetry]
name = "notdiamond"
version = "0.4.6"
description = "Not Diamond Python SDK"
authors = ["Not Diamond <support@notdiamond.ai>"]
readme = "README.md"
homepage = "https://python.notdiamond.ai/"
repository = "https://github.com/Not-Diamond/notdiamond-python"
documentation = "https://notdiamond.readme.io/docs/"

[tool.poetry.dependencies]
python = ">3.10,<3.13"
python-dotenv = "^1.0.1"
aiohttp = "^3.9.3"
pandas = "^2.2.2"
pydantic-partial = "^0.5.5"
cryptography = ">=44.0.1"
h11 = ">=0.16.0"
tiktoken = ">=0.8.0,<0.9.0"
langchain = { version = ">=0.3.22", optional = true }
langchain-google-genai = { version = ">=2.1.2", optional = true }
langchain-openai = { version = ">=0.3.9", optional = true }
langchain-anthropic = { version = ">=0.3.10", optional = true }
langchain-community = { version = ">=0.3.20", optional = true }
langchain-mistralai = { version = ">=0.2.10", optional = true }
langchain-together = { version = ">=0.3.0", optional = true }
langchain-cohere = { version = ">=0.4.3", optional = true }
requests = ">=2.31"
urllib3 = ">=2.5.0"
transformers = { version = ">=4.53.0", optional = true }
pypdf = { version = ">=6.0.0", optional = true }
openai = { version = ">=1.66.3", optional = true }
optuna = { version = "^4.1.0", optional = true }
ragas = { version = "^0.2.6", optional = true }
unstructured = { extras = [
    "local-inference",
], version = "^0.16.5", optional = true }
onnxruntime = { version = "<1.20", optional = true }
python-multipart = { version = "0.0.18", extras = ["rag"] }
llama-index = { version = ">=0.13.0", optional = true }
torch = { version = "^2.8.0", optional = true }
tqdm = "^4.67.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.6"
pytest-mock = "^3.14.0"
coverage = "^7.6.0"
pytest-recording = "^0.13.2"
pytest-timeout = "^2.3.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.1"
pydantic = "^2.5.3"
pre-commit = "^3.7.0"
black = "^24.3.0"
flake8 = "^7.0.0"
poetry-pre-commit-plugin = "^0.1.2"
isort = "^5.13.2"
nox = "^2024.3.2"
pytest-mock = "^3.14.0"


[tool.poetry.group.docs.dependencies]
sphinx = "^7.3.7"
autodoc = "^0.5.0"
sphinx-rtd-theme = "^2.0.0"
toml = "^0.10.2"

[tool.poetry.extras]
create = [
    "langchain-cohere",
    "langchain-anthropic",
    "langchain-community",
    "langchain-mistralai",
    "langchain-google-genai",
    "langchain-openai",
    "langchain-together",
    "langchain",
]
openai = ["openai"]
rag = [
    "ragas",
    "unstructured",
    "optuna",
    "onnxruntime",
    "langchain-cohere",
    "langchain-anthropic",
    "langchain-community",
    "langchain-mistralai",
    "langchain-google-genai",
    "langchain-openai",
    "langchain-together",
    "langchain",
    "llama-index",
    "torch",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = ["longrun"]

[tool.black]
line-length = 79
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.mypy_cache
| \.venv
| _build
)/
'''

[tool.flake8]
max-line-length = 130
extend-ignore = [
    "D203",
    "E203",
    "E251",
    "E266",
    "E302",
    "E305",
    "E401",
    "E402",
    "E501",
    "F401",
    "F403",
    "W503",
]
exclude = [".git", "__pycache__", "dist", "cookbooks"]
max-complexity = 10

[tool.isort]
atomic = true
profile = "black"
line_length = 79
skip_gitignore = true

[tool.coverage.run]
branch = true
relative_files = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
